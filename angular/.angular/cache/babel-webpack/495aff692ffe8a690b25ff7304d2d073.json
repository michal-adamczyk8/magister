{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpEvent } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = environment.apiUrl;\n    }\n\n    getUsers() {\n      return this.httpClient.get(`${this.baseUrl}/user/all/0/10`);\n    }\n\n    addUser(formData) {\n      return this.httpClient.post(`${this.baseUrl}/user/add`, formData);\n    }\n\n    updateUser(formData) {\n      return this.httpClient.put(`${this.baseUrl}/user/edit`, formData);\n    }\n\n    resetPassword(email, password) {\n      //TODO: dodać request\n      return this.httpClient.patch(`${this.baseUrl}/user/reset-password`, password);\n    }\n\n    updateProfileImage(formData) {\n      return this.httpClient.post(`${this.baseUrl}/user/profileImage`, formData, {\n        reportProgress: true,\n        observe: 'events'\n      });\n    }\n\n    deleteUser(userId) {\n      return this.httpClient.delete(`${this.baseUrl}/user/${userId}`);\n    }\n\n    addUsersToLocalCache(users) {\n      localStorage.setItem('users', JSON.stringify(users));\n    }\n\n    getUsersFromLocalCache() {\n      if (localStorage.getItem('users')) {\n        return JSON.parse(localStorage.getItem('users'));\n      }\n\n      return null;\n    }\n\n    createUserFormData(loggedInUsername, user, profileImage) {\n      const formData = new FormData();\n      formData.append('currenUsername', loggedInUsername);\n      formData.append('firstName', user.firstName);\n      formData.append('lastName', user.lastName);\n      formData.append('username', user.username);\n      formData.append('email', user.email);\n      formData.append('role', user.role);\n      formData.append('isActive', JSON.stringify(user.isActive));\n      formData.append('isNonLocked', JSON.stringify(user.isNotLocked));\n      formData.append('profileImage', profileImage);\n      return formData;\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}