{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ShelterService = /*#__PURE__*/(() => {\n  class ShelterService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.baseUrl = environment.apiUrl;\n      this.sheltersChanged = new Subject();\n      this.shelters = [];\n    }\n\n    addShelter(newShelter) {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(newShelter);\n      this.shelters.push(newShelter);\n      return this.httpClient.post(this.baseUrl + '/shelter', body, {\n        headers\n      }).subscribe();\n    }\n\n    getAllShelters() {\n      return this.httpClient.get(this.baseUrl + '/shelter/all');\n    }\n\n    deleteShelter(shelter) {\n      const httpUrl = this.baseUrl + '/shelter/' + shelter.id;\n      return this.httpClient.delete(httpUrl).subscribe();\n    }\n\n    getSingleShelter(shelterId) {\n      return this.httpClient.get(`${this.baseUrl}/shelter/details/${shelterId}`);\n    }\n\n    saveEditedShelter(shelter) {\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(shelter);\n      return this.httpClient.put(`${this.baseUrl}/shelter/edit`, body, {\n        headers\n      }).subscribe();\n    }\n\n  }\n\n  ShelterService.ɵfac = function ShelterService_Factory(t) {\n    return new (t || ShelterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ShelterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShelterService,\n    factory: ShelterService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShelterService;\n})();","map":null,"metadata":{},"sourceType":"module"}